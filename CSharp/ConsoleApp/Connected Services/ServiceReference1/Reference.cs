//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApp.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITeachers")]
    public interface ITeachers {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachers/Create", ReplyAction="http://tempuri.org/ITeachers/CreateResponse")]
        Models.Teacher Create(Models.Teacher entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachers/Create", ReplyAction="http://tempuri.org/ITeachers/CreateResponse")]
        System.Threading.Tasks.Task<Models.Teacher> CreateAsync(Models.Teacher entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachers/ReadById", ReplyAction="http://tempuri.org/ITeachers/ReadByIdResponse")]
        Models.Teacher ReadById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachers/ReadById", ReplyAction="http://tempuri.org/ITeachers/ReadByIdResponse")]
        System.Threading.Tasks.Task<Models.Teacher> ReadByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachers/Read", ReplyAction="http://tempuri.org/ITeachers/ReadResponse")]
        Models.Teacher[] Read();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachers/Read", ReplyAction="http://tempuri.org/ITeachers/ReadResponse")]
        System.Threading.Tasks.Task<Models.Teacher[]> ReadAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachers/Update", ReplyAction="http://tempuri.org/ITeachers/UpdateResponse")]
        void Update(int id, Models.Teacher entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachers/Update", ReplyAction="http://tempuri.org/ITeachers/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(int id, Models.Teacher entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachers/Delete", ReplyAction="http://tempuri.org/ITeachers/DeleteResponse")]
        bool Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeachers/Delete", ReplyAction="http://tempuri.org/ITeachers/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITeachersChannel : ConsoleApp.ServiceReference1.ITeachers, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TeachersClient : System.ServiceModel.ClientBase<ConsoleApp.ServiceReference1.ITeachers>, ConsoleApp.ServiceReference1.ITeachers {
        
        public TeachersClient() {
        }
        
        public TeachersClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TeachersClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TeachersClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TeachersClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Models.Teacher Create(Models.Teacher entity) {
            return base.Channel.Create(entity);
        }
        
        public System.Threading.Tasks.Task<Models.Teacher> CreateAsync(Models.Teacher entity) {
            return base.Channel.CreateAsync(entity);
        }
        
        public Models.Teacher ReadById(int id) {
            return base.Channel.ReadById(id);
        }
        
        public System.Threading.Tasks.Task<Models.Teacher> ReadByIdAsync(int id) {
            return base.Channel.ReadByIdAsync(id);
        }
        
        public Models.Teacher[] Read() {
            return base.Channel.Read();
        }
        
        public System.Threading.Tasks.Task<Models.Teacher[]> ReadAsync() {
            return base.Channel.ReadAsync();
        }
        
        public void Update(int id, Models.Teacher entity) {
            base.Channel.Update(id, entity);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(int id, Models.Teacher entity) {
            return base.Channel.UpdateAsync(id, entity);
        }
        
        public bool Delete(int id) {
            return base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
    }
}
